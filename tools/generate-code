#!/bin/sh
#
#	Usage:
#	./generate-code
#	./generate-code SOURCE-PATH
#	./generate-code SOURCE-PATH sqlite | pgsql
#
# HOME_GRPC=/home/andrei/src-old/third_party/grpc/include
# ODBINC+=-I$HOME_GRPC

if [ -n "$1" ]; then
    cd $1
fi

ODB_DB_NAME=sqlite

if [ -n "$2" ]; then
    ODB_DB_NAME=$2
fi

DT=`date --rfc-2822`
SRC=.
PROTO=rcr.proto
H="$SRC/gen/rcr.pb.h"
HVIEWS="$SRC/odb/odb-views.h"
# Seriaization
protoc -I $SRC/proto --cpp_out=$SRC/gen $PROTO
# gRPC
protoc -I $SRC/proto --grpc_out=$SRC/gen --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` $PROTO

PRECLASS=' private:\
  friend class odb::access;\
  \/\/ @@prepare-pb-odb-class(\1\.\2)\
'

PRIV='\
\
public:\
  const std::vector<\1::$(ACCESSVECTORCLASS)*> m$SB;\
\
  std::vector<\1::$(ACCESSVECTORCLASS)*>\& get$SB() const\
  {\
	  std::vector<\1::$(ACCESSVECTORCLASS)*> *r = (std::vector<\1::$(ACCESSVECTORCLASS)*>*) \&m$SB;\
	  r->clear();\
	  const \1::$(ACCESSVECTORCLASS)* const* d = $SB_.data();\
	  for (int i = 0; i < r->size(); i++)\
	  {\
		  r->push_back((\1::$(ACCESSVECTORCLASS)*) *d);\
		  d++;\
	  }\
	return *r;\
  };\
\
  void set$SB(std::vector<\1::$(ACCESSVECTORCLASS)*> v)\
  {\
	  $SB_.Clear();\
	  for (std::vector<\1::$(ACCESSVECTORCLASS)*>::iterator it = v.begin(); it != v.end(); ++it)\
	  {\
		  \1::$(ACCESSVECTORCLASS)* h = $SB_.Add();\
		  h = *it;\
	  }\
  };\
  private:\
'
# once
sed -i "s/@@protoc_insertion_point(\(includes\))/@@protoc_insertion_point(\1)\n\/\/-- autogenerated by prepare-pb-odb $DT --\n\/\/-- \1 --\n#include <odb\/core.hxx>/" $H
# each class just in case
sed -i "s/\ \ \/\/ @@protoc_insertion_point(class_scope:\(.*\)\.\(.*\))/  \/\/ @@protoc_insertion_point(class_scope:\1\.\2)\n$PRECLASS/" $H

ODBINC="-I/usr/include/x86_64-linux-gnu -I/usr/local/include -I$SRC/odb"
ODBDEFS="-DGEN_ODB -D__x86_64__ -D__LP64__"
odb -o $SRC/gen -d $ODB_DB_NAME -x -std=c++14 --options-file $SRC/odb/options.pgsql --fkeys-deferrable-mode not_deferrable \
    --generate-query --generate-schema --schema-format sql $ODBINC $ODBDEFS $H
odb -o $SRC/gen -d $ODB_DB_NAME -x -std=c++14 --options-file $SRC/odb/options.pgsql --fkeys-deferrable-mode not_deferrable \
    --generate-query --generate-schema --schema-format embedded $ODBINC $ODBDEFS $H
odb -o $SRC/gen -d $ODB_DB_NAME -x -std=c++14 --fkeys-deferrable-mode not_deferrable --generate-query $ODBINC $ODBDEFS $HVIEWS
