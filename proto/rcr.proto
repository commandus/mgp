syntax = "proto3";

// Radio components registry

package rcr;

// import "google/api/annotations.proto";

option cc_enable_arenas = true;
option java_package = "com.commandus.rcr";

// symbols: +, -, =
message Operation
{
    uint64 id = 1;
    string symbol = 2;
    string description = 3;
}

message Symbol 
{
    uint64 id = 1;
    string sym = 2;
    string unit = 3;
    int32 pow10 = 4;                            ///< power of 10
}

message Component
{
    uint64 id = 1;
    uint64 symbol_id = 2;
    string name = 3;
}

message PropertyType
{
    uint64 id = 1;
    string key = 2;
    string description = 3;
}

message Property
{
    uint64 id = 1;
    uint64 property_type_id = 2;
    string value = 3;
}

message Package
{
    uint64 id = 1;
    uint64 card_id = 2;
    uint64 boxes = 3;                          ///< 4 * 2 bytes
    uint64 qty = 4;
}

message Card
{
    uint64 id = 1;
    string name = 2;
    uint64 component_id = 3;
    uint64 nominal = 4;
    repeated Property properties = 5;
    repeated Package packages = 6;
}

message Cards
{
    repeated Card cards = 1;
}

message Packages
{
    repeated Package package = 1;
}

// Operation log
message JournalEntry
{
    uint64 id = 1;                              ///< identifier
    uint64 dt = 2;                              ///< modification date & time
    string user = 3;                            ///< user name
    Package package = 4;                        ///< user name
    Operation operation = 5;                    ///< user name
    int64 value = 6;                            ///< amount
}

// Operation log
message Journal 
{
    repeated JournalEntry entries = 1;          ///< record
}

// Requests

message VersionRequest 
{
    uint64 value = 1;                           ///<
}

message VersionResponse 
{
    uint64 value = 1;                           ///<
    string name = 2;
}

message ListRequest
{
    uint64 offset = 1;                           ///< 0..
    uint64 size = 2;                             ///< e.g. 100
}

message SearchCriteria
{
    string compareSign = 1;                      ///< =- equal, >=- greatr or equal,..
    Card card = 2;                               ///< e.g. 100
}

// Search Requests

message AdvancedSearchRequest 
{
    repeated SearchCriteria searchCriterias = 1;    ///< all "AND"
    ListRequest listrequest = 2;
}

// equals
message EqualSearchRequest 
{
    string value = 1;                           ///<
    ListRequest listrequest = 2;
}

// >= and <=
message RangeSearchRequest 
{
    string first = 1;                           ///<
    string last = 2;                            ///<
    ListRequest listrequest = 3;
}

// Responses
message CardResponse 
{
    uint64 count = 1;                           ///< dataset size
    ListRequest listrequest = 2;                ///< return request's offset and size
    repeated Card cards = 3;                    ///< dataset
}

message OperationResponse
{
    int32 code = 1;
    uint64 id = 2;
    string description = 3;
}

message ChPropertyTypeRequest
{
    string operationSymbol = 1;
    PropertyType value = 2;
}

message CardQueryRequest
{
    string query = 1;
    ListRequest list = 2;
}

message CardQueryResponse
{
    OperationResponse rslt = 1;
    CardResponse cards = 2;
}

message DictionariesRequest
{
    int32 flags = 1;
}

message DictionariesResponse
{
    repeated Operation operation = 1;
    repeated Symbol symbol = 2;
    repeated PropertyType property_type = 3;
}

// ------------ RPC -------------

service Rcr
{
    rpc cardSearchEqual(EqualSearchRequest) returns (CardResponse) {}
    rpc chPropertyType(ChPropertyTypeRequest) returns (OperationResponse) {}
    rpc version(VersionRequest) returns (VersionResponse) {}
    rpc cardQuery(CardQueryRequest) returns (CardQueryResponse) {}
    rpc cardPush(stream Card) returns (OperationResponse) {}
    rpc getDictionaries(DictionariesRequest) returns (DictionariesResponse) {}
}
